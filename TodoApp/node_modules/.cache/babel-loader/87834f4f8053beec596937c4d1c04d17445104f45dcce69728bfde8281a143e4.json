{"ast":null,"code":"var _jsxFileName = \"/Users/milk717/WebstormProjects/learning-react/src/App.js\",\n  _s = $RefreshSig$();\nimport TodoTemplate from \"./component/TodoTemplate\";\nimport './index.css';\nimport TodoInsert from \"./component/TodoInsert\";\nimport TodoList from \"./component/TodoList\";\nimport { useRef, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '블로그 포스팅하기',\n    checked: false\n  }, {\n    id: 2,\n    text: '운동하기',\n    checked: false\n  }, {\n    id: 3,\n    text: '금귤정과 만들기',\n    checked: true\n  }]);\n  /*\n  id이 바뀐다고 해서 컴포넌트가 리렌더링 될 필요가 없다.\n  id값은 그저 참조하는 값일 뿐. 따라서 useRef사용\n   */\n  const nextId = useRef(4);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoInsert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"RkErltgqcybZw/vCSbEvvFQnwz4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoTemplate","TodoInsert","TodoList","useRef","useState","App","todos","setTodos","id","text","checked","nextId"],"sources":["/Users/milk717/WebstormProjects/learning-react/src/App.js"],"sourcesContent":["import TodoTemplate from \"./component/TodoTemplate\";\nimport './index.css';\nimport TodoInsert from \"./component/TodoInsert\";\nimport TodoList from \"./component/TodoList\";\nimport {useRef, useState} from \"react\";\n\nfunction App() {\n const [todos, setTodos] = useState([\n     {\n         id: 1,\n         text: '블로그 포스팅하기',\n         checked: false,\n     },\n     {\n         id: 2,\n         text: '운동하기',\n         checked: false,\n     },\n     {\n         id: 3,\n         text: '금귤정과 만들기',\n         checked: true,\n     },\n ]);\n /*\n id이 바뀐다고 해서 컴포넌트가 리렌더링 될 필요가 없다.\n id값은 그저 참조하는 값일 뿐. 따라서 useRef사용\n  */\n const nextId = useRef(4);\n  return (\n    <>\n      <TodoTemplate>\n          <TodoInsert/>\n          <TodoList todos={todos}/>\n      </TodoTemplate>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,0BAA0B;AACnD,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAEvC,SAASC,GAAG,GAAG;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAC/B;IACII,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACb,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE;EACb,CAAC,CACJ,CAAC;EACF;AACD;AACA;AACA;EACC,MAAMC,MAAM,GAAGR,MAAM,CAAC,CAAC,CAAC;EACvB,oBACE;IAAA,uBACE,QAAC,YAAY;MAAA,wBACT,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAE,eACb,QAAC,QAAQ;QAAC,KAAK,EAAEG;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACd,iBACd;AAEP;AAAC,GA/BQD,GAAG;AAAA,KAAHA,GAAG;AAiCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}