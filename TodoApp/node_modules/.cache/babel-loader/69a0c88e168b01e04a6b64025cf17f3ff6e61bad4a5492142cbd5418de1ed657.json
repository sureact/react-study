{"ast":null,"code":"var _jsxFileName = \"/Users/milk717/WebstormProjects/learning-react/src/App.js\",\n  _s = $RefreshSig$();\nimport TodoTemplate from \"./component/TodoTemplate\";\nimport './index.css';\nimport TodoInsert from \"./component/TodoInsert\";\nimport TodoList from \"./component/TodoList\";\nimport { useCallback, useRef, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    text: '블로그 포스팅하기',\n    checked: false\n  }, {\n    id: 2,\n    text: '운동하기',\n    checked: false\n  }, {\n    id: 3,\n    text: '금귤정과 만들기',\n    checked: true\n  }]);\n  /*\n  id이 바뀐다고 해서 컴포넌트가 리렌더링 될 필요가 없다.\n  id값은 그저 참조하는 값일 뿐. 따라서 useRef사용\n   */\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1;\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TodoTemplate, {\n      children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n        onInsert: onInsert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        todos: todos,\n        onRemove: onRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"fXFagkpa/8I9Fj3XBogYzjpu6ys=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoTemplate","TodoInsert","TodoList","useCallback","useRef","useState","App","todos","setTodos","id","text","checked","nextId","onInsert","todo","current","concat","onRemove","filter"],"sources":["/Users/milk717/WebstormProjects/learning-react/src/App.js"],"sourcesContent":["import TodoTemplate from \"./component/TodoTemplate\";\nimport './index.css';\nimport TodoInsert from \"./component/TodoInsert\";\nimport TodoList from \"./component/TodoList\";\nimport {useCallback, useRef, useState} from \"react\";\n\nfunction App() {\n    const [todos, setTodos] = useState([\n        {\n            id: 1,\n            text: '블로그 포스팅하기',\n            checked: false,\n        },\n        {\n            id: 2,\n            text: '운동하기',\n            checked: false,\n        },\n        {\n            id: 3,\n            text: '금귤정과 만들기',\n            checked: true,\n        },\n    ]);\n    /*\n    id이 바뀐다고 해서 컴포넌트가 리렌더링 될 필요가 없다.\n    id값은 그저 참조하는 값일 뿐. 따라서 useRef사용\n     */\n    const nextId = useRef(4);\n\n    const onInsert = useCallback(text => {\n        const todo = {\n            id: nextId.current,\n            text,\n            checked: false,\n        }\n        setTodos(todos.concat(todo));\n        nextId.current += 1;\n    }, [todos])\n\n    const onRemove = useCallback(id=>{\n        setTodos(todos.filter(todo=>todo.id !== id));\n    },[todos])\n\n    return (\n        <>\n            <TodoTemplate>\n                <TodoInsert onInsert={onInsert}/>\n                <TodoList todos={todos} onRemove={onRemove}/>\n            </TodoTemplate>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,0BAA0B;AACnD,OAAO,aAAa;AACpB,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAAQC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAEpD,SAASC,GAAG,GAAG;EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAC/B;IACII,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE;EACb,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;EACb,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE;EACb,CAAC,CACJ,CAAC;EACF;AACJ;AACA;AACA;EACI,MAAMC,MAAM,GAAGR,MAAM,CAAC,CAAC,CAAC;EAExB,MAAMS,QAAQ,GAAGV,WAAW,CAACO,IAAI,IAAI;IACjC,MAAMI,IAAI,GAAG;MACTL,EAAE,EAAEG,MAAM,CAACG,OAAO;MAClBL,IAAI;MACJC,OAAO,EAAE;IACb,CAAC;IACDH,QAAQ,CAACD,KAAK,CAACS,MAAM,CAACF,IAAI,CAAC,CAAC;IAC5BF,MAAM,CAACG,OAAO,IAAI,CAAC;EACvB,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMU,QAAQ,GAAGd,WAAW,CAACM,EAAE,IAAE;IAC7BD,QAAQ,CAACD,KAAK,CAACW,MAAM,CAACJ,IAAI,IAAEA,IAAI,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;EAChD,CAAC,EAAC,CAACF,KAAK,CAAC,CAAC;EAEV,oBACI;IAAA,uBACI,QAAC,YAAY;MAAA,wBACT,QAAC,UAAU;QAAC,QAAQ,EAAEM;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACjC,QAAC,QAAQ;QAAC,KAAK,EAAEN,KAAM;QAAC,QAAQ,EAAEU;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAClC,iBAChB;AAEX;AAAC,GA9CQX,GAAG;AAAA,KAAHA,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}